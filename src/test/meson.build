tests = files([
    'beatgridtest.cpp',
    'beatmaptest.cpp',
    'beatstranslatetest.cpp',
    'bpmcontrol_test.cpp',
    'configobject_test.cpp',
    'controller_preset_validation_test.cpp',
    'controlobjecttest.cpp',
    'durationutiltest.cpp',
    'enginebufferscalelineartest.cpp',
    'enginefilterbiquadtest.cpp',
    'keyutilstest.cpp',
    'lcstest.cpp',
    'learningutilstest.cpp',
    'mathutiltest.cpp',
    'midicontrollertest.cpp',
    'movinginterquartilemean_test.cpp',
    'performancetimer_test.cpp',
    'playcountertest.cpp',
    'portmidienumeratortest.cpp',
    'replaygaintest.cpp',
    'rescalertest.cpp',
    'skincontext_test.cpp',
    'softtakeover_test.cpp',
    'soundsourceproviderregistrytest.cpp',
    'synccontroltest.cpp',
    'tableview_test.cpp',
    'tracknumberstest.cpp',
    'wpushbutton_test.cpp',
    'analyserwaveformtest.cpp',
    'audiotaperpot_test.cpp',
    'autodjprocessor_test.cpp',
    'baseeffecttest.cpp',
    'broadcastprofile_test.cpp',
    'channelhandle_test.cpp',
    'controllerengine_test.cpp',
    'coverartcache_test.cpp',
    'coverartutils_test.cpp',
    'cratestorage_test.cpp',
    'dbconnectionpool_test.cpp',
    'dbidtest.cpp',
    'directorydaotest.cpp',
    'duration_test.cpp',
    'effectchainslottest.cpp',
    'effectslottest.cpp',
    'effectsmanagertest.cpp',
    'enginebuffertest.cpp',
    'enginesynctest.cpp',
    'globaltrackcache_test.cpp',
    'indexrange_test.cpp',
    'libraryscannertest.cpp',
    'looping_control_test.cpp',
    'main.cpp',
    'metadatatest.cpp',
    'metaknob_link_test.cpp',
    'mixxxtest.cpp',
    'nativeeffects_test.cpp',
    'portmidicontroller_test.cpp',
    'queryutiltest.cpp',
    'samplebuffertest.cpp',
    'sampleutiltest.cpp',
    'schemamanager_test.cpp',
    'searchqueryparsertest.cpp',
    'signalpathtest.cpp',
    'soundproxy_test.cpp',
    'sqliteliketest.cpp',
    'taglibtest.cpp',
    'trackdao_test.cpp',
    'trackexport_test.cpp',
    'trackreftest.cpp',
    'trackupdate_test.cpp',
    'wwidgetstack_test.cpp',
    'enginemastertest.cpp',
    'enginemicrophonetest.cpp',
    'readaheadmanager_test.cpp',
    'signalpathtest.h'
])

test_prep = qt5.preprocess(
    moc_headers: [ 
        'trackexport_test.h'
]
)

tst = executable('tst',
    dependencies : [qt5dep, dependency('benchmark'), dependencies],
    sources: [tests, protos, test_prep],
    include_directories: includes,
    link_with: libmixxx,
    install: false)

test('t1', tst)
